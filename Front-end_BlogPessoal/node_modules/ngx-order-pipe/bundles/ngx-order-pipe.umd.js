(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('ngx-order-pipe', ['exports', '@angular/core'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global['ngx-order-pipe'] = {}, global.ng.core));
}(this, (function (exports, core) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b)
            if (b.hasOwnProperty(p))
                d[p] = b[p]; };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s)
                if (Object.prototype.hasOwnProperty.call(s, p))
                    t[p] = s[p];
        }
        return t;
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++)
                if (e.indexOf(p[i]) < 0)
                    t[p[i]] = s[p[i]];
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [0, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    function __exportStar(m, exports) {
        for (var p in m)
            if (!exports.hasOwnProperty(p))
                exports[p] = m[p];
    }
    function __values(o) {
        var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
        if (m)
            return m.call(o);
        return {
            next: function () {
                if (o && i >= o.length)
                    o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { if (o[n])
            i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; }; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator];
        return m ? m.call(o) : typeof __values === "function" ? __values(o) : o[Symbol.iterator]();
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (Object.hasOwnProperty.call(mod, k))
                    result[k] = mod[k];
        result.default = mod;
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }

    var OrderPipe_1;
    exports.OrderPipe = OrderPipe_1 = /** @class */ (function () {
        function OrderPipe() {
        }
        /**
         * Check if a value is a string
         *
         * @param value
         */
        OrderPipe.isString = function (value) {
            return typeof value === "string" || value instanceof String;
        };
        /**
         * Sorts values ignoring the case
         *
         * @param a
         * @param b
         */
        OrderPipe.caseInsensitiveSort = function (a, b) {
            if (OrderPipe_1.isString(a) && OrderPipe_1.isString(b)) {
                return a.localeCompare(b);
            }
            return OrderPipe_1.defaultCompare(a, b);
        };
        /**
         * Default compare method
         *
         * @param a
         * @param b
         */
        OrderPipe.defaultCompare = function (a, b) {
            if (a && a instanceof Date) {
                a = a.getTime();
            }
            if (b && b instanceof Date) {
                b = b.getTime();
            }
            if (a === b) {
                return 0;
            }
            if (a == null) {
                return 1;
            }
            if (b == null) {
                return -1;
            }
            return a > b ? 1 : -1;
        };
        /**
         * Parse expression, split into items
         * @param expression
         * @returns {string[]}
         */
        OrderPipe.parseExpression = function (expression) {
            expression = expression.replace(/\[(\w+)\]/g, ".$1");
            expression = expression.replace(/^\./, "");
            return expression.split(".");
        };
        /**
         * Get value by expression
         *
         * @param object
         * @param expression
         * @returns {any}
         */
        OrderPipe.getValue = function (object, expression) {
            for (var i = 0, n = expression.length; i < n; ++i) {
                if (!object) {
                    return;
                }
                var k = expression[i];
                if (!(k in object)) {
                    return;
                }
                if (typeof object[k] === "function") {
                    object = object[k]();
                }
                else {
                    object = object[k];
                }
            }
            return object;
        };
        /**
         * Set value by expression
         *
         * @param object
         * @param value
         * @param expression
         */
        OrderPipe.setValue = function (object, value, expression) {
            var i;
            for (i = 0; i < expression.length - 1; i++) {
                object = object[expression[i]];
            }
            object[expression[i]] = value;
        };
        OrderPipe.prototype.transform = function (value, expression, reverse, isCaseInsensitive, comparator) {
            if (isCaseInsensitive === void 0) { isCaseInsensitive = false; }
            if (!value) {
                return value;
            }
            if (Array.isArray(expression)) {
                return this.multiExpressionTransform(value, expression.slice(), reverse, isCaseInsensitive, comparator);
            }
            if (Array.isArray(value)) {
                return this.sortArray(value.slice(), expression, reverse, isCaseInsensitive, comparator);
            }
            if (typeof value === "object") {
                return this.transformObject(Object.assign({}, value), expression, reverse, isCaseInsensitive, comparator);
            }
            return value;
        };
        /**
         * Sort array
         *
         * @param value
         * @param expression
         * @param reverse
         * @param isCaseInsensitive
         * @param comparator
         * @returns {any[]}
         */
        OrderPipe.prototype.sortArray = function (value, expression, reverse, isCaseInsensitive, comparator) {
            var isDeepLink = expression && expression.indexOf(".") !== -1;
            if (isDeepLink) {
                expression = OrderPipe_1.parseExpression(expression);
            }
            var compareFn;
            if (comparator && typeof comparator === "function") {
                compareFn = comparator;
            }
            else {
                compareFn = isCaseInsensitive
                    ? OrderPipe_1.caseInsensitiveSort
                    : OrderPipe_1.defaultCompare;
            }
            var array = value.sort(function (a, b) {
                if (!expression) {
                    return compareFn(a, b);
                }
                if (!isDeepLink) {
                    if (a && b) {
                        return compareFn(a[expression], b[expression]);
                    }
                    return compareFn(a, b);
                }
                return compareFn(OrderPipe_1.getValue(a, expression), OrderPipe_1.getValue(b, expression));
            });
            if (reverse) {
                return array.reverse();
            }
            return array;
        };
        /**
         * Transform Object
         *
         * @param value
         * @param expression
         * @param reverse
         * @param isCaseInsensitive
         * @param comparator
         * @returns {any[]}
         */
        OrderPipe.prototype.transformObject = function (value, expression, reverse, isCaseInsensitive, comparator) {
            var parsedExpression = OrderPipe_1.parseExpression(expression);
            var lastPredicate = parsedExpression.pop();
            var oldValue = OrderPipe_1.getValue(value, parsedExpression);
            if (!Array.isArray(oldValue)) {
                parsedExpression.push(lastPredicate);
                lastPredicate = null;
                oldValue = OrderPipe_1.getValue(value, parsedExpression);
            }
            if (!oldValue) {
                return value;
            }
            OrderPipe_1.setValue(value, this.transform(oldValue, lastPredicate, reverse, isCaseInsensitive), parsedExpression);
            return value;
        };
        /**
         * Apply multiple expressions
         *
         * @param value
         * @param {any[]} expressions
         * @param {boolean} reverse
         * @param {boolean} isCaseInsensitive
         * @param {Function} comparator
         * @returns {any}
         */
        OrderPipe.prototype.multiExpressionTransform = function (value, expressions, reverse, isCaseInsensitive, comparator) {
            var _this = this;
            if (isCaseInsensitive === void 0) { isCaseInsensitive = false; }
            return expressions.reverse().reduce(function (result, expression) {
                return _this.transform(result, expression, reverse, isCaseInsensitive, comparator);
            }, value);
        };
        return OrderPipe;
    }());
    exports.OrderPipe = OrderPipe_1 = __decorate([
        core.Pipe({
            name: "orderBy",
            pure: false,
        })
    ], exports.OrderPipe);

    exports.OrderModule = /** @class */ (function () {
        function OrderModule() {
        }
        return OrderModule;
    }());
    exports.OrderModule = __decorate([
        core.NgModule({
            declarations: [exports.OrderPipe],
            exports: [exports.OrderPipe],
            providers: [exports.OrderPipe]
        })
    ], exports.OrderModule);

    /**
     * Generated bundle index. Do not edit.
     */

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-order-pipe.umd.js.map
